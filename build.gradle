buildscript {
    ext {
        gradleInternalMajorVersion = "5.+"
    }
    dependencies {
        classpath "com.blackbaud:gradle-internal:${gradleInternalMajorVersion}"
    }
}

apply plugin: "blackbaud-internal"
apply plugin: "blackbaud-templates"
apply plugin: "integration-test"

setGradleVersions()
println "Using gradle version: ${gradleVersion}"

dependencies {
    compileOnly gradleApi()
    compile localGroovy()
    compile 'com.google.guava:guava:18.0'
    compile 'org.eclipse.jgit:org.eclipse.jgit:4.0.2.201509141540-r'

    sharedTestCompile gradleTestKit()
    sharedTestCompile ("com.blackbaud:gradle-internal-test:${gradleInternalMajorVersion}") {
        exclude group: 'org.spockframework'
    }
    sharedTestCompile('org.spockframework:spock-core:1.2-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
    sharedTestCompile 'junit:junit:4.11'
}

check.dependsOn integrationTest

task setGreenwashProperty << {
    project.ext.greenwash = "true"
}

task greenwashTemplateTests(
        description: "greenwash the generated template projects",
        dependsOn: [setGreenwashProperty, componentTest]) {
}

componentTest.mustRunAfter setGreenwashProperty

componentTest.doFirst {
    systemProperties project.ext.getProperties()
}

def setGradleVersions() {
    def group
    try {
      def props = new Properties()
      File propFile = new File('gradle/wrapper/gradle-wrapper.properties')
      props.load(propFile.newDataInputStream())
      String distUrl = props.getProperty('distributionUrl')
      group = (distUrl =~ "gradle-blackbaud-((.*)-bb.[0-9]+.[0-9]+)-bin.zip")
    } catch (Exception ex) {
      throw new RuntimeException("Failed to parse gradle version from gradle-wrapper.properties. Please ensure distributionUrl is set!")
    }

    ext {
        gradleVersion=group[0][2]
        blackbaudGradleVersion=group[0][1]
    }
}
