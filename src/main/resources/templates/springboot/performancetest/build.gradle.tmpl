apply plugin: 'scala'
apply plugin: 'java'

sourceSets {
    performanceTests {
        scala {
            srcDir 'src/main/scala'
            include 'src/main/scala/**'
        }
    }
}

dependencies {
    compile 'com.blackbaud:common-gatling:0.+'

    performanceTestsCompile 'io.gatling.highcharts:gatling-charts-highcharts:2.3.1'
    performanceTestsCompile 'com.typesafe:config:1.3.0'
    performanceTestsCompile 'org.fluttercode.datafactory:datafactory:0.8'
    performanceTestsCompile 'net.liftweb:lift-json-scalaz_2.10:2.6.3'
}

class GatlingPerfTest extends JavaExec {
    String group = 'Gatling Perf Test'
    String simulationClass = ""

    public GatlingPerfTest() {
        super()
        classpath = project.sourceSets.main.compileClasspath + project.sourceSets.main.runtimeClasspath + project.sourceSets.performanceTests.compileClasspath
        setMain("io.gatling.app.Gatling")
    }

    def setSimulationClass(String simClass) {
        args(['--simulation', simClass])
    }
}

task ${lowerCamelName}Test (type: GatlingPerfTest) {
    simulationClass = 'com.blackbaud.${lowerCaseName}.${upperCamelName}Test'
}

task runGatlingTests {
    dependsOn '${lowerCamelName}Test'
}

publishing_ext {
    publication('main') {
        enabled = false
    }
}