buildscript {
    ext {
        springBootVersion = "1.4.1.RELEASE"
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:\${springBootVersion}"
        classpath "com.blackbaud:gradle-internal:4.+"
        classpath "com.blackbaud:gradle-templates:3.+"
    }
}

apply plugin: "blackbaud-internal-rest"
apply plugin: "blackbaud-templates"
apply plugin: "spring-boot"

allprojects {
    apply plugin: "blackbaud-internal"

    ext {
        servicePackageName="${servicePackageName}"
        commonSpringBootVersion = "\${springBootVersion}-2.+"
        spockVersion = "1.1-groovy-2.4"
        lombokVersion = "1.16.18"
    }

    // necessary until most projects have been updated to not produce lombok as a transitive dependency
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.projectlombok') {
                details.useVersion lombokVersion
            }
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:\${lombokVersion}"

        mainTestCompile "com.blackbaud:common-test:3.+"
        mainTestCompileOnly "org.codehaus.groovy:groovy-all:2.4.7"
    }
}

dependencies {
    compile "com.blackbaud:common-spring-boot-rest:\${commonSpringBootVersion}"

    sharedTestCompile "org.codehaus.groovy:groovy-all:2.4.7"
    sharedTestCompile "com.blackbaud:common-spring-boot-rest-test:\${commonSpringBootVersion}"
    sharedTestCompile "org.springframework.boot:spring-boot-starter-test"
    sharedTestCompile ("org.spockframework:spock-core:\${spockVersion}") {
        exclude group: "org.codehaus.groovy"
    }
    sharedTestCompile ("org.spockframework:spock-spring:\${spockVersion}") {
        exclude group: "org.codehaus.groovy"
    }
}

swagger {
    generateDocs
}
